version: "3"

services:
  backend:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: unless-stopped
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  configurator:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: "no"
    entrypoint:
      - bash
      - -c
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  create-site:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: "no"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --mariadb-user-host-login-scope='%' --admin-password=${ADMIN_PASSWORD} --db-root-username=root --db-root-password=${MYSQL_ROOT_PASSWORD} --install-app erpnext --set-default frontend;
    depends_on:
      configurator:
        condition: service_completed_successfully

  # MariaDB Database
  db:
    image: mariadb:10.6
    networks:
      - erpnext-network
    healthcheck:
      test: mysqladmin ping -h localhost --password=${MYSQL_ROOT_PASSWORD}
      interval: 1s
      retries: 20
    restart: unless-stopped
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${DB_EXTERNAL_PORT}:3306"

  frontend:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    depends_on:
      - websocket
      - backend
    restart: unless-stopped
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: frontend
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "${ERPNEXT_EXTERNAL_PORT}:8080"

  queue-long:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: unless-stopped
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    depends_on:
      create-site:
        condition: service_completed_successfully

  queue-short:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: unless-stopped
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    depends_on:
      create-site:
        condition: service_completed_successfully

  redis-queue:
    image: redis:6.2-alpine
    networks:
      - erpnext-network
    restart: unless-stopped
    volumes:
      - redis_queue_data:/data

  redis-cache:
    image: redis:6.2-alpine
    networks:
      - erpnext-network
    restart: unless-stopped

  scheduler:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: unless-stopped
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    depends_on:
      create-site:
        condition: service_completed_successfully

  websocket:
    image: frappe/erpnext:v15.66.1
    networks:
      - erpnext-network
    restart: unless-stopped
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    depends_on:
      create-site:
        condition: service_completed_successfully

  # Nginx Proxy Manager for external access
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - "80:80"                      # HTTP
      - "${NGINX_HTTPS_PORT}:443"   # HTTPS
      - "${NGINX_ADMIN_PORT}:81"     # Admin Web UI
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "root"
      DB_MYSQL_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      DB_MYSQL_NAME: "${NPM_DB_NAME}"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - erpnext-network
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  redis_queue_data:
  sites:
  logs:
  npm_data:
  npm_letsencrypt:

networks:
  erpnext-network:
    driver: bridge